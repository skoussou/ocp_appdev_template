apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: parks-prod-apps-dc
objects:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-${COLOR}
  spec:
    replicas: 1
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}-${COLOR}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}-${COLOR}
      spec:
        containers:
        - env:
          - name: DB_USERNAME
            valueFrom:
              configMapKeyRef:
                key: DB_USERNAME
                name: ${APPLICATION_NAME}-${COLOR}-config
          - name: APPNAME
            valueFrom:
              configMapKeyRef:
                key: APPNAME
                name: ${APPLICATION_NAME}-${COLOR}-config
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                key: DB_HOST
                name: ${APPLICATION_NAME}-${COLOR}-config
          - name: DB_NAME
            valueFrom:
              configMapKeyRef:
                key: DB_NAME
                name: ${APPLICATION_NAME}-${COLOR}-config
          - name: DB_PASSWORD
            valueFrom:
              configMapKeyRef:
                key: DB_PASSWORD
                name: ${APPLICATION_NAME}-${COLOR}-config
          - name: DB_PORT
            valueFrom:
              configMapKeyRef:
                key: DB_PORT
                name: ${APPLICATION_NAME}-${COLOR}-config
          - name: DB_REPLICASET
            valueFrom:
              configMapKeyRef:
                key: DB_REPLICASET
                name: ${APPLICATION_NAME}-${COLOR}-config
          image: docker-registry.default.svc:5000/${GUID}-parks-dev/${APPLICATION_NAME}:0.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - echo
              - ok
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: ${APPLICATION_NAME}-${COLOR}
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers: []
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  data:
    APPNAME: ${APPNAME_LABEL}
    DB_HOST: mongodb
    DB_NAME: parks
    DB_PASSWORD: mongodb
    DB_PORT: "27017"
    DB_REPLICASET: rs0
    DB_USERNAME: mongodb
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: ${APPLICATION_NAME}-${COLOR}-config
parameters:
- description: The Name of the backend application to create a suitable deployment for 
  displayName: APPLICATION_NAME
  name: APPLICATION_NAME
  required: true
- description: The Color of the deployment (blue/green) of the backend application to create a deployment for 
  displayName: COLOR
  name: COLOR
  required: true
- description: The Name Label for the application to be reported from the /info endpoint (eg. MLB Parks (Blue))
  displayName: Info Label Name
  name: APPNAME_LABEL
  required: true
- description: The GUID prefix of the parks-dev project 
  displayName: GUID 
  name: GUID
  required: true
