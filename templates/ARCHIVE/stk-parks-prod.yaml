apiVersion: template.openshift.io/v1
kind: Template
metadata:
  creationTimestamp: null
  name: stk-parks-prod
objects:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 6
    labels:
      app: mlbparks
    name: mlbparks-blue
  spec:
    paused: true
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: mlbparks
      deploymentconfig: mlbparks-blue
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: mlbparks
          deploymentconfig: mlbparks-blue
      spec:
        containers:
        - env:
          - name: DB_USERNAME
            valueFrom:
              configMapKeyRef:
                key: DB_USERNAME
                name: mlbparks-blue-config
          - name: APPNAME
            valueFrom:
              configMapKeyRef:
                key: APPNAME
                name: mlbparks-blue-config
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                key: DB_HOST
                name: mlbparks-blue-config
          - name: DB_NAME
            valueFrom:
              configMapKeyRef:
                key: DB_NAME
                name: mlbparks-blue-config
          - name: DB_PASSWORD
            valueFrom:
              configMapKeyRef:
                key: DB_PASSWORD
                name: mlbparks-blue-config
          - name: DB_PORT
            valueFrom:
              configMapKeyRef:
                key: DB_PORT
                name: mlbparks-blue-config
          - name: DB_REPLICASET
            valueFrom:
              configMapKeyRef:
                key: DB_REPLICASET
                name: mlbparks-blue-config
          image: docker-registry.default.svc:5000/stk-parks-dev/mlbparks:0.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - echo
              - ok
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: mlbparks-blue
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers: []
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 7
    labels:
      app: mlbparks
    name: mlbparks-green
  spec:
    paused: true
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: mlbparks
      deploymentconfig: mlbparks-green
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: mlbparks
          deploymentconfig: mlbparks-green
      spec:
        containers:
        - env:
          - name: APPNAME
            valueFrom:
              configMapKeyRef:
                key: APPNAME
                name: mlbparks-green-config
          - name: DB_PORT
            valueFrom:
              configMapKeyRef:
                key: DB_PORT
                name: mlbparks-green-config
          - name: DB_REPLICASET
            valueFrom:
              configMapKeyRef:
                key: DB_REPLICASET
                name: mlbparks-green-config
          - name: DB_USERNAME
            valueFrom:
              configMapKeyRef:
                key: DB_USERNAME
                name: mlbparks-green-config
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                key: DB_HOST
                name: mlbparks-green-config
          - name: DB_NAME
            valueFrom:
              configMapKeyRef:
                key: DB_NAME
                name: mlbparks-green-config
          - name: DB_PASSWORD
            valueFrom:
              configMapKeyRef:
                key: DB_PASSWORD
                name: mlbparks-green-config
          image: docker-registry.default.svc:5000/stk-parks-dev/mlbparks:0.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - echo
              - ok
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: mlbparks-green
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ws/healthz/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers: []
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: mlbparks-green
      type: parksmap-backend
    name: mlbparks-green
  spec:
    ports:
    - name: 8080-8080
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: mlbparks-green
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  data:
    APPNAME: MLB Parks (Blue)
    DB_HOST: mongodb
    DB_NAME: parks
    DB_PASSWORD: mongodb
    DB_PORT: "27017"
    DB_REPLICASET: rs0
    DB_USERNAME: mongodb
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: mlbparks-blue-config
- apiVersion: v1
  data:
    APPNAME: MLB Parks (Green)
    DB_HOST: mongodb
    DB_NAME: parks
    DB_PASSWORD: mongodb
    DB_PORT: "27017"
    DB_REPLICASET: rs0
    DB_USERNAME: mongodb
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: mlbparks-green-config
